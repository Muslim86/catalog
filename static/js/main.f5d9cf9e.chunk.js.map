{"version":3,"sources":["components/ViewModelsPanel/ViewModelsPanel.module.scss","components/App/App.module.scss","components/SearchLine/SearchLine.module.scss","components/Error/Error.module.scss","components/Loading/Loading.module.scss","components/TableView/TableView.module.scss","components/ListView/ListView.module.scss","components/CatalogItem/CatalogItem.module.scss","stores/catalogListStore/catalogListStore.service.ts","stores/catalogListStore/catalogListStore.ts","components/SearchLine/SearchLine.tsx","components/Error/Error.tsx","components/Loading/Loading.tsx","components/TableView/TableView.tsx","components/CatalogItem/CatalogItem.tsx","components/ListView/ListView.tsx","components/ViewModelsPanel/ViewModelsPanel.tsx","components/CatalogList/CatalogList.tsx","components/CatalogVisibilityButton/VisibilityButton.tsx","components/routes/Catalog/Catalog.tsx","components/routes/Home/Home.tsx","components/routes/About/About.tsx","components/AppRouter/AppRouter.tsx","components/ui/Header/Header.tsx","components/App/App.tsx","index.tsx","components/CatalogList/CatalogList.module.scss","components/ui/Header/Header.module.scss"],"names":["module","exports","service","getCategories","axios","get","then","response","data","sortCategories","categories","_","sortBy","category","strCategory","sortHeaders","key","index","CatalogListStore","isVisible","isFetching","fetchError","searchQuery","isFiltered","isSorted","countVisibleItems","isMaxCountVisibleItems","makeAutoObservable","this","a","keys","toJS","boolean","length","SearchLine","observer","props","className","styles","component","onChange","e","setSearch","target","value","rows","placeholder","store","Error","Loading","loader","items","headers","map","elem","onClick","catalogListStore","Object","onClickHandler","src","strCategoryThumb","alt","strCategoryDescription","idCategory","CatalogItem","useState","isOpen","setIsOpen","onKeyDown","slice","ListView","ViewModelsPanel","setCurrentViewModel","currentModel","setCurrentModel","activeButton","setActiveButton","counter","createViewModel","useMemo","name","id","viewModels","itemsList","useEffect","filter","type","active","undefined","CatalogList","setItems","search","currentViewModel","fetch","chunk","startsWith","hidden","body","showMore","addCountVisibleItems","VisibilityButton","visible","setVisibility","Catalog","Home","About","AppRouter","path","element","Header","classes","navigation","to","link","App","content","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f5d9cf9e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"ViewModelsPanel_component__3c1BD\",\"active\":\"ViewModelsPanel_active__1uEHH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"App_component__2CKbw\",\"content\":\"App_content__2kCVU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"SearchLine_component__3PyAa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"Error_component__2PupV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loading_loader__33PuR\",\"load2\":\"Loading_load2__LOPvx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"TableView_component__3Mx2X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"ListView_component__PhMI2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"CatalogItem_component__KUmLS\"};","import axios from 'axios';\r\nimport _ from 'lodash';\r\n\r\nimport { Categories } from '../../models/Categories';\r\nimport { Category } from '../../models/Category';\r\n\r\nconst baseApiUrl = 'https://www.themealdb.com/api/json/v1/1';\r\n\r\nconst service = {\r\n  getCategories(): Promise<Categories> {\r\n    return axios.get(`${baseApiUrl}/categories.php`).then((response) => response.data);\r\n  },\r\n\r\n  sortCategories(categories: Category[]): Category[] {\r\n    return _.sortBy(categories, [(category) => category.strCategory]);\r\n  },\r\n\r\n  sortHeaders(categories: Category[], key: string[], index: number): Category[] {\r\n    return _.sortBy(categories, [key[index + 1]]);\r\n  },\r\n};\r\n\r\nexport default service;\r\n","import { makeAutoObservable, toJS } from 'mobx';\r\n\r\nimport service from './catalogListStore.service';\r\nimport { Category } from '../../models/Category';\r\n\r\nclass CatalogListStore {\r\n  categories: Category[] | undefined;\r\n\r\n  isVisible = true;\r\n\r\n  isFetching = false;\r\n\r\n  fetchError = false;\r\n\r\n  searchQuery: string | undefined;\r\n\r\n  isFiltered = false;\r\n\r\n  isSorted = false;\r\n\r\n  countVisibleItems = 3;\r\n\r\n  isMaxCountVisibleItems = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  async fetch() {\r\n    try {\r\n      this.isFetching = true;\r\n      const response = await service.getCategories();\r\n      this.categories = response.categories;\r\n      this.isFetching = false;\r\n    } catch (e) {\r\n      this.fetchError = true;\r\n    }\r\n  }\r\n\r\n  sortCategories() {\r\n    if (this.categories) {\r\n      this.categories = service.sortCategories(this.categories);\r\n    }\r\n  }\r\n\r\n  sortHeaders(keys: string[], index: number) {\r\n    if (this.categories) {\r\n      this.categories = service.sortHeaders(toJS(this.categories), keys, index);\r\n    }\r\n  }\r\n\r\n  setVisibility(boolean: boolean) {\r\n    this.isVisible = boolean;\r\n  }\r\n\r\n  addCountVisibleItems() {\r\n    this.countVisibleItems += 3;\r\n    this.isMaxCountVisibleItems = (this.categories?.length || 0) < this.countVisibleItems;\r\n  }\r\n}\r\n\r\nexport default new CatalogListStore();\r\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nimport catalogListStore from '../../stores/catalogListStore';\r\nimport styles from './SearchLine.module.scss';\r\n\r\ntype SearchLineProps = {\r\n  store: typeof catalogListStore;\r\n  setSearch: (str: string) => void;\r\n};\r\n\r\nconst SearchLine: React.FC<SearchLineProps> = observer((props) => {\r\n  const changeHandle = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    props.setSearch(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.component}>\r\n      <textarea onChange={changeHandle} rows={1} placeholder=\"Фильтрация\">\r\n        {props?.store?.searchQuery}\r\n      </textarea>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default SearchLine;\r\n","import React from 'react';\n\nimport styles from './Error.module.scss';\n\nconst Error: React.FC = () => (\n  <div className={styles.component}>\n    Ошибка при получении данных, обновите страницу.\n  </div>\n);\n\nexport default Error;\n","import React from 'react';\n\nimport styles from './Loading.module.scss';\n\nconst Loading: React.FC = () => (\n  <div className={styles.loader} />\n);\n\nexport default Loading;\n","import React from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nimport styles from './TableView.module.scss';\r\nimport { Category } from '../../models/Category';\r\nimport catalogListStore from '../../stores/catalogListStore';\r\n\r\ntype TableViewProps = {\r\n  headers: string[];\r\n  items: Category[];\r\n};\r\n\r\nconst TableView: React.FC<TableViewProps> = (props) => {\r\n  const { items, headers } = props;\r\n\r\n  const onClickHandler = (index: number) => {\r\n    catalogListStore.isSorted = !catalogListStore.isSorted;\r\n    const keys = Object.keys(items[0]);\r\n    catalogListStore.sortHeaders(keys, index);\r\n  };\r\n\r\n  return (\r\n    <table className={styles.component}>\r\n      <thead>\r\n        <tr>\r\n          {headers\r\n          && headers.map((elem, index) => <th key={elem} onClick={() => onClickHandler(index)}>{elem}</th>)}\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {items && items.map((elem) => (\r\n          <tr key={elem.idCategory}>\r\n            <td>{elem.strCategory}</td>\r\n            <td><img src={elem.strCategoryThumb} alt=\"\" /></td>\r\n            <td>{elem.strCategoryDescription}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default observer(TableView);\r\n","import React, { useState } from 'react';\r\n\r\nimport styles from './CatalogItem.module.scss';\r\n\r\ntype CatalogProps = {\r\n  strCategory: string;\r\n  strCategoryThumb: string;\r\n  strCategoryDescription: string;\r\n};\r\n\r\nconst CatalogItem: React.FC<CatalogProps> = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const onClickHandler = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n  return (\r\n    // eslint-disable-next-line\r\n    <div className={styles.component} onClick={onClickHandler} onKeyDown={onClickHandler}>\r\n      <h3>{props.strCategory}</h3>\r\n      {isOpen && <img src={props.strCategoryThumb} alt=\"\" />}\r\n      <p>{isOpen ? props.strCategoryDescription : `${props.strCategoryDescription?.slice(0, 65)}...`}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CatalogItem;\r\n","import React from 'react';\r\n\r\nimport styles from './ListView.module.scss';\r\nimport { Category } from '../../models/Category';\r\nimport CatalogItem from '../CatalogItem';\r\n\r\ntype ListViewProps = {\r\n  items: Category[];\r\n};\r\n\r\nconst ListView: React.FC<ListViewProps> = (props) => {\r\n  const { items } = props;\r\n  return (\r\n    <div className={styles.component}>\r\n      <ul>\r\n        {items && items.map((elem) => (\r\n          <li key={elem.idCategory}>\r\n            <CatalogItem\r\n              strCategory={elem.strCategory}\r\n              strCategoryThumb={elem.strCategoryThumb}\r\n              strCategoryDescription={elem.strCategoryDescription}\r\n            />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListView;\r\n","import React, { useEffect, useMemo, useState } from 'react';\r\n\r\nimport styles from './ViewModelsPanel.module.scss';\r\nimport { ViewModel } from '../../models/ViewModel';\r\nimport { Category } from '../../models/Category';\r\nimport TableView from '../TableView';\r\nimport ListView from '../ListView';\r\n\r\ntype ViewModelsPanelProps = {\r\n  items: Category[] | undefined;\r\n  headers: string[];\r\n  setCurrentViewModel: React.Dispatch<React.SetStateAction<JSX.Element | undefined>>;\r\n};\r\n\r\nconst ViewModelsPanel: React.FC<ViewModelsPanelProps> = (props) => {\r\n  const { items, headers, setCurrentViewModel } = props;\r\n  const [currentModel, setCurrentModel] = useState<string>();\r\n  const [activeButton, setActiveButton] = useState<string>();\r\n  let counter = 0;\r\n\r\n  const createViewModel = useMemo(() => (\r\n    name: string,\r\n    component: (\r\n      itemsList: Category[],\r\n    ) => JSX.Element,\r\n  ): ViewModel => ({\r\n    // eslint-disable-next-line\r\n    id: counter++,\r\n    name,\r\n    component,\r\n  }), [counter]);\r\n\r\n  const viewModels = useMemo(() => ([\r\n    createViewModel('Таблица', (itemsList) => (\r\n      <TableView\r\n        items={itemsList}\r\n        headers={headers}\r\n      />\r\n    )),\r\n    createViewModel('Список', (itemsList) => <ListView items={itemsList} />),\r\n  ]), [createViewModel, headers]);\r\n\r\n  useEffect(() => {\r\n    if (currentModel && items) {\r\n      setCurrentViewModel(viewModels.filter((elem) => elem.name === currentModel)[0].component(items));\r\n    } else if (items) {\r\n      setCurrentViewModel(viewModels[0].component(items));\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [items, currentModel, setCurrentViewModel]);\r\n\r\n  return (\r\n    <div className={styles.component}>\r\n      {viewModels && items\r\n      && viewModels.map((elem) => (\r\n        <button\r\n          type=\"button\"\r\n          key={elem.id}\r\n          className={activeButton === elem.name ? styles.active : undefined}\r\n          onClick={() => {\r\n            setActiveButton(elem.name);\r\n            setCurrentModel(elem.name);\r\n            setCurrentViewModel(elem.component(items));\r\n          }}\r\n        >{elem.name}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewModelsPanel;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport _ from 'lodash';\r\n\r\nimport styles from './CatalogList.module.scss';\r\nimport catalogListStore from '../../stores/catalogListStore';\r\nimport SearchLine from '../SearchLine';\r\nimport { Category } from '../../models/Category';\r\nimport Error from '../Error';\r\nimport Loading from '../Loading';\r\nimport ViewModelsPanel from '../ViewModelsPanel';\r\n\r\ntype CatalogTypes = {\r\n  store: typeof catalogListStore;\r\n};\r\n\r\nconst CatalogList: React.FC<CatalogTypes> = observer((props) => {\r\n  const { store } = props;\r\n  const [items, setItems] = useState<Category[]>();\r\n  const [search, setSearch] = useState('');\r\n  const [currentViewModel, setCurrentViewModel] = useState<JSX.Element>();\r\n  const isFiltered = search.length > 3;\r\n\r\n  useEffect(() => {\r\n    catalogListStore.fetch().then(() => {\r\n      catalogListStore.sortCategories();\r\n      setItems(_.chunk(catalogListStore.categories, catalogListStore.countVisibleItems)[0]);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isFiltered) {\r\n      setItems(store.categories?.filter((elem) => elem.strCategory.startsWith(search)));\r\n      store.isFiltered = true;\r\n    } else if (!store.isSorted) {\r\n      setItems(_.chunk(store.categories, store.countVisibleItems)[0]);\r\n      store.isFiltered = false;\r\n    }\r\n  }, [search, isFiltered, store.countVisibleItems, store, store.categories]);\r\n\r\n  return (\r\n    <div className={store.isVisible ? styles.component : styles.hidden}>\r\n      {store.fetchError ? <Error /> : null}\r\n      {store.isFetching && !store.fetchError ? <Loading /> : null}\r\n      <div className={store.isFetching || store.fetchError ? styles.hidden : styles.body}>\r\n        <SearchLine store={store} setSearch={setSearch} />\r\n        <ViewModelsPanel\r\n          items={items}\r\n          headers={['Название', 'Картинка', 'Описание']}\r\n          setCurrentViewModel={setCurrentViewModel}\r\n        />\r\n        {currentViewModel}\r\n        {!isFiltered && !store.isMaxCountVisibleItems\r\n          ? (\r\n            <div>\r\n              <button type=\"button\" className={styles.showMore} onClick={() => store.addCountVisibleItems()}>Показать ещё</button>\r\n            </div>\r\n          ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default CatalogList;\r\n","import React from 'react';\nimport { observer } from 'mobx-react-lite';\n\nimport catalogListStore from '../../stores/catalogListStore';\nimport styles from './CatalogVisibilityButton.module.scss';\n\ntype VisibilityProps = {\n  store: typeof catalogListStore;\n};\n\nconst VisibilityButton: React.FC<VisibilityProps> = observer((props) => {\n  const visible = props.store.isVisible;\n\n  const clickHandler = () => {\n    props.store.setVisibility(!visible);\n  };\n\n  return (\n    <button type=\"button\" onClick={() => clickHandler()} className={styles.component}>\n      {\n        visible ? 'Скрыть' : 'Показать'\n      }\n    </button>\n  );\n});\n\nexport default VisibilityButton;\n","import React from 'react';\n\nimport CatalogList from '../../CatalogList';\nimport VisibilityButton from '../../CatalogVisibilityButton';\nimport catalogListStore from '../../../stores/catalogListStore';\n\nconst Catalog: React.FC = () => (\n  <div>\n    <h1>Страница каталога</h1>\n    <VisibilityButton store={catalogListStore} />\n    <CatalogList store={catalogListStore} />\n  </div>\n);\n\nexport default Catalog;\n","import React from 'react';\n\nconst Home: React.FC = () => (\n  <div>\n    <h1>Главная страница</h1>\n  </div>\n);\n\nexport default Home;\n","import React from 'react';\r\n\r\nconst About: React.FC = () => (\r\n  <div>\r\n    <h1>О проекте</h1>\r\n    <p>Учебный проект в рамках марафона ГНИВЦ. Автор - я, смотрите вы.</p>\r\n  </div>\r\n);\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport { Routes, Route } from 'react-router-dom';\r\n\r\nimport Catalog from '../routes/Catalog';\r\nimport Home from '../routes/Home';\r\nimport About from '../routes/About';\r\n\r\nconst AppRouter: React.FC = () => (\r\n  <Routes>\r\n    <Route path=\"/\" element={<Home />} />\r\n    <Route path=\"/catalog\" element={<Catalog />} />\r\n    <Route path=\"/about\" element={<About />} />\r\n  </Routes>\r\n);\r\n\r\nexport default AppRouter;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport classes from './Header.module.scss';\r\n\r\nconst Header: React.FC = () => (\r\n  <header className={classes.component}>\r\n    <nav className={classes.navigation}>\r\n      <NavLink\r\n        to=\"/\"\r\n        className={classes.link}\r\n      >\r\n        Главная\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        to=\"/catalog\"\r\n        className={classes.link}\r\n      >\r\n        Каталог\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/about\"\r\n        className={classes.link}\r\n      >\r\n        О проекте\r\n      </NavLink>\r\n    </nav>\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","import React from 'react';\n\nimport AppRouter from '../AppRouter';\nimport Header from '../ui/Header';\nimport classes from './App.module.scss';\n\nconst App: React.FC = () => (\n  <main className={classes.component}>\n    <Header />\n    <section className={classes.content}>\n      <AppRouter />\n    </section>\n  </main>\n);\n\nexport default App;\n","import 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"CatalogList_component__3qwGa\",\"hidden\":\"CatalogList_hidden__3blyv\",\"body\":\"CatalogList_body__8g0BM\",\"showMore\":\"CatalogList_showMore__1XAOf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"component\":\"Header_component__2Qcpy\",\"navigation\":\"Header_navigation__3s_nt\",\"link\":\"Header_link__3eAk9\",\"active\":\"Header_active__PYkbk\"};"],"sourceRoot":""}